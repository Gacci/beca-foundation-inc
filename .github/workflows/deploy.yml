name: Deploy Angular to S3 + CloudFront (Test)

# Trigger on push to master branch (update)
on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Node.js
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3️⃣ Install dependencies
      - name: Install Dependencies
        run: npm ci

      # 4️⃣ Build Angular app
      - name: Build Angular
        run: npm run build -- --configuration production

      # 5️⃣ Test AWS secrets (safe step)
      - name: Test AWS Secrets
        run: |
          echo "AWS_BUCKET is set: ${AWS_BUCKET}"
          echo "AWS_REGION is set: ${AWS_REGION}"
          echo "CLOUDFRONT_ID is set: ${CLOUDFRONT_ID}"
        env:
          AWS_BUCKET: ${{ secrets.S3_BUCKET }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          CLOUDFRONT_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

      6️⃣ Deploy to S3 (uncomment to activate real deploy)
      - name: Deploy to S3
        uses: aws-actions/s3-sync@v1
        with:
          source_dir: 'docs'  # replace with your Angular dist folder
          dest_dir: '/'
          bucket: ${{ secrets.S3_BUCKET }}
          region: ${{ secrets.AWS_REGION }}
          delete: false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      7️⃣ Invalidate CloudFront Cache (uncomment to activate)
      - name: Invalidate CloudFront Cache
        uses: aws-actions/cloudfront-invalidate@v1
        with:
          distribution-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          paths: '/*'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}